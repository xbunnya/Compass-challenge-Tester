<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="serverest.test.usuarios.GETusuariosTest" time="0.96" tests="2" errors="1" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="20"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="D:\eclipsee\serverest.aula.pb.inicio\target\test-classes;D:\eclipsee\serverest.aula.pb.inicio\target\classes;C:\Users\Duda\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.0\junit-jupiter-engine-5.9.0.jar;C:\Users\Duda\.m2\repository\org\junit\platform\junit-platform-engine\1.9.0\junit-platform-engine-1.9.0.jar;C:\Users\Duda\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Duda\.m2\repository\org\junit\platform\junit-platform-commons\1.9.0\junit-platform-commons-1.9.0.jar;C:\Users\Duda\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.0\junit-jupiter-api-5.9.0.jar;C:\Users\Duda\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Duda\.m2\repository\com\github\javafaker\javafaker\1.0.2\javafaker-1.0.2.jar;C:\Users\Duda\.m2\repository\org\apache\commons\commons-lang3\3.5\commons-lang3-3.5.jar;C:\Users\Duda\.m2\repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23-android.jar;C:\Users\Duda\.m2\repository\com\github\mifmif\generex\1.0.2\generex-1.0.2.jar;C:\Users\Duda\.m2\repository\dk\brics\automaton\automaton\1.11-8\automaton-1.11-8.jar;C:\Users\Duda\.m2\repository\com\google\code\gson\gson\2.10.1\gson-2.10.1.jar;C:\Users\Duda\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\Duda\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\Duda\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.2\jackson-annotations-2.15.2.jar;C:\Users\Duda\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\Duda\.m2\repository\io\rest-assured\rest-assured\5.3.1\rest-assured-5.3.1.jar;C:\Users\Duda\.m2\repository\org\apache\groovy\groovy\4.0.11\groovy-4.0.11.jar;C:\Users\Duda\.m2\repository\org\apache\groovy\groovy-xml\4.0.11\groovy-xml-4.0.11.jar;C:\Users\Duda\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\Duda\.m2\repository\org\apache\httpcomponents\httpcore\4.4.13\httpcore-4.4.13.jar;C:\Users\Duda\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Duda\.m2\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;C:\Users\Duda\.m2\repository\org\apache\httpcomponents\httpmime\4.5.13\httpmime-4.5.13.jar;C:\Users\Duda\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Duda\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Duda\.m2\repository\io\rest-assured\json-path\5.3.1\json-path-5.3.1.jar;C:\Users\Duda\.m2\repository\org\apache\groovy\groovy-json\4.0.11\groovy-json-4.0.11.jar;C:\Users\Duda\.m2\repository\io\rest-assured\rest-assured-common\5.3.1\rest-assured-common-5.3.1.jar;C:\Users\Duda\.m2\repository\io\rest-assured\xml-path\5.3.1\xml-path-5.3.1.jar;C:\Users\Duda\.m2\repository\io\qameta\allure\allure-junit5\2.18.1\allure-junit5-2.18.1.jar;C:\Users\Duda\.m2\repository\io\qameta\allure\allure-junit-platform\2.18.1\allure-junit-platform-2.18.1.jar;C:\Users\Duda\.m2\repository\io\qameta\allure\allure-java-commons\2.18.1\allure-java-commons-2.18.1.jar;C:\Users\Duda\.m2\repository\org\slf4j\slf4j-api\1.7.30\slf4j-api-1.7.30.jar;C:\Users\Duda\.m2\repository\io\qameta\allure\allure-model\2.18.1\allure-model-2.18.1.jar;C:\Users\Duda\.m2\repository\io\qameta\allure\allure-test-filter\2.18.1\allure-test-filter-2.18.1.jar;C:\Users\Duda\.m2\repository\org\junit\platform\junit-platform-launcher\1.8.2\junit-platform-launcher-1.8.2.jar;C:\Users\Duda\.m2\repository\io\rest-assured\json-schema-validator\5.3.1\json-schema-validator-5.3.1.jar;C:\Users\Duda\.m2\repository\com\github\java-json-tools\json-schema-validator\2.2.14\json-schema-validator-2.2.14.jar;C:\Users\Duda\.m2\repository\com\github\java-json-tools\jackson-coreutils-equivalence\1.0\jackson-coreutils-equivalence-1.0.jar;C:\Users\Duda\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\Duda\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\Duda\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\Duda\.m2\repository\com\github\java-json-tools\json-schema-core\1.2.14\json-schema-core-1.2.14.jar;C:\Users\Duda\.m2\repository\com\github\java-json-tools\uri-template\0.10\uri-template-0.10.jar;C:\Users\Duda\.m2\repository\org\mozilla\rhino\1.7.7.2\rhino-1.7.7.2.jar;C:\Users\Duda\.m2\repository\com\sun\mail\mailapi\1.6.2\mailapi-1.6.2.jar;C:\Users\Duda\.m2\repository\joda-time\joda-time\2.10.5\joda-time-2.10.5.jar;C:\Users\Duda\.m2\repository\com\googlecode\libphonenumber\libphonenumber\8.11.1\libphonenumber-8.11.1.jar;C:\Users\Duda\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Duda\.m2\repository\net\sf\jopt-simple\jopt-simple\5.0.4\jopt-simple-5.0.4.jar;C:\Users\Duda\.m2\repository\com\google\guava\guava\32.0.1-jre\guava-32.0.1-jre.jar;C:\Users\Duda\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\Duda\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Duda\.m2\repository\org\checkerframework\checker-qual\3.33.0\checker-qual-3.33.0.jar;C:\Users\Duda\.m2\repository\com\google\errorprone\error_prone_annotations\2.18.0\error_prone_annotations-2.18.0.jar;C:\Users\Duda\.m2\repository\com\google\j2objc\j2objc-annotations\2.8\j2objc-annotations-2.8.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="America/Sao_Paulo"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="20"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="BR"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-20\bin"/>
    <property name="sun.java.command" value="C:\Users\Duda\AppData\Local\Temp\surefire4710106291568501946\surefirebooter-20230728135616809_3.jar C:\Users\Duda\AppData\Local\Temp\surefire4710106291568501946 2023-07-28T13-56-16_295-jvmRun1 surefire-20230728135616809_1tmp surefire_0-20230728135616809_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="D:\eclipsee\serverest.aula.pb.inicio\target\test-classes;D:\eclipsee\serverest.aula.pb.inicio\target\classes;C:\Users\Duda\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.0\junit-jupiter-engine-5.9.0.jar;C:\Users\Duda\.m2\repository\org\junit\platform\junit-platform-engine\1.9.0\junit-platform-engine-1.9.0.jar;C:\Users\Duda\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Duda\.m2\repository\org\junit\platform\junit-platform-commons\1.9.0\junit-platform-commons-1.9.0.jar;C:\Users\Duda\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.0\junit-jupiter-api-5.9.0.jar;C:\Users\Duda\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Duda\.m2\repository\com\github\javafaker\javafaker\1.0.2\javafaker-1.0.2.jar;C:\Users\Duda\.m2\repository\org\apache\commons\commons-lang3\3.5\commons-lang3-3.5.jar;C:\Users\Duda\.m2\repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23-android.jar;C:\Users\Duda\.m2\repository\com\github\mifmif\generex\1.0.2\generex-1.0.2.jar;C:\Users\Duda\.m2\repository\dk\brics\automaton\automaton\1.11-8\automaton-1.11-8.jar;C:\Users\Duda\.m2\repository\com\google\code\gson\gson\2.10.1\gson-2.10.1.jar;C:\Users\Duda\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\Duda\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\Duda\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.2\jackson-annotations-2.15.2.jar;C:\Users\Duda\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\Duda\.m2\repository\io\rest-assured\rest-assured\5.3.1\rest-assured-5.3.1.jar;C:\Users\Duda\.m2\repository\org\apache\groovy\groovy\4.0.11\groovy-4.0.11.jar;C:\Users\Duda\.m2\repository\org\apache\groovy\groovy-xml\4.0.11\groovy-xml-4.0.11.jar;C:\Users\Duda\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\Duda\.m2\repository\org\apache\httpcomponents\httpcore\4.4.13\httpcore-4.4.13.jar;C:\Users\Duda\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Duda\.m2\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;C:\Users\Duda\.m2\repository\org\apache\httpcomponents\httpmime\4.5.13\httpmime-4.5.13.jar;C:\Users\Duda\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Duda\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Duda\.m2\repository\io\rest-assured\json-path\5.3.1\json-path-5.3.1.jar;C:\Users\Duda\.m2\repository\org\apache\groovy\groovy-json\4.0.11\groovy-json-4.0.11.jar;C:\Users\Duda\.m2\repository\io\rest-assured\rest-assured-common\5.3.1\rest-assured-common-5.3.1.jar;C:\Users\Duda\.m2\repository\io\rest-assured\xml-path\5.3.1\xml-path-5.3.1.jar;C:\Users\Duda\.m2\repository\io\qameta\allure\allure-junit5\2.18.1\allure-junit5-2.18.1.jar;C:\Users\Duda\.m2\repository\io\qameta\allure\allure-junit-platform\2.18.1\allure-junit-platform-2.18.1.jar;C:\Users\Duda\.m2\repository\io\qameta\allure\allure-java-commons\2.18.1\allure-java-commons-2.18.1.jar;C:\Users\Duda\.m2\repository\org\slf4j\slf4j-api\1.7.30\slf4j-api-1.7.30.jar;C:\Users\Duda\.m2\repository\io\qameta\allure\allure-model\2.18.1\allure-model-2.18.1.jar;C:\Users\Duda\.m2\repository\io\qameta\allure\allure-test-filter\2.18.1\allure-test-filter-2.18.1.jar;C:\Users\Duda\.m2\repository\org\junit\platform\junit-platform-launcher\1.8.2\junit-platform-launcher-1.8.2.jar;C:\Users\Duda\.m2\repository\io\rest-assured\json-schema-validator\5.3.1\json-schema-validator-5.3.1.jar;C:\Users\Duda\.m2\repository\com\github\java-json-tools\json-schema-validator\2.2.14\json-schema-validator-2.2.14.jar;C:\Users\Duda\.m2\repository\com\github\java-json-tools\jackson-coreutils-equivalence\1.0\jackson-coreutils-equivalence-1.0.jar;C:\Users\Duda\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\Duda\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\Duda\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\Duda\.m2\repository\com\github\java-json-tools\json-schema-core\1.2.14\json-schema-core-1.2.14.jar;C:\Users\Duda\.m2\repository\com\github\java-json-tools\uri-template\0.10\uri-template-0.10.jar;C:\Users\Duda\.m2\repository\org\mozilla\rhino\1.7.7.2\rhino-1.7.7.2.jar;C:\Users\Duda\.m2\repository\com\sun\mail\mailapi\1.6.2\mailapi-1.6.2.jar;C:\Users\Duda\.m2\repository\joda-time\joda-time\2.10.5\joda-time-2.10.5.jar;C:\Users\Duda\.m2\repository\com\googlecode\libphonenumber\libphonenumber\8.11.1\libphonenumber-8.11.1.jar;C:\Users\Duda\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Duda\.m2\repository\net\sf\jopt-simple\jopt-simple\5.0.4\jopt-simple-5.0.4.jar;C:\Users\Duda\.m2\repository\com\google\guava\guava\32.0.1-jre\guava-32.0.1-jre.jar;C:\Users\Duda\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\Duda\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Duda\.m2\repository\org\checkerframework\checker-qual\3.33.0\checker-qual-3.33.0.jar;C:\Users\Duda\.m2\repository\com\google\errorprone\error_prone_annotations\2.18.0\error_prone_annotations-2.18.0.jar;C:\Users\Duda\.m2\repository\com\google\j2objc\j2objc-annotations\2.8\j2objc-annotations-2.8.jar;"/>
    <property name="allure.results.directory" value="D:\eclipsee\serverest.aula.pb.inicio\target/allure-results"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Duda"/>
    <property name="user.language" value="pt"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-04-18"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-20"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="D:\eclipsee\serverest.aula.pb.inicio"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\Duda\AppData\Local\Temp\surefire4710106291568501946\surefirebooter-20230728135616809_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="20.0.1+9-29"/>
    <property name="user.name" value="Duda"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\Duda\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\Duda\AppData\Local\Temp\"/>
    <property name="java.version" value="20.0.1"/>
    <property name="user.dir" value="D:\eclipsee\serverest.aula.pb.inicio"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-20\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Git\cmd;C:\Program Files (x86)\Git\cmd;C:\jdk-20.0.01\bin;C:\apache-maven-3.9.2\bin;C:\Program Files\;C:\Node.js;C:\Users\Duda\AppData\Local\Microsoft\WindowsApps;C:\Users\Duda\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Duda\AppData\Roaming\npm;C:\Arquivos de Programa\Node.js;."/>
    <property name="junit.jupiter.extensions.autodetection.enabled" value="true"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="20.0.1+9-29"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="64.0"/>
  </properties>
  <testcase name="listaUsuario" classname="serverest.test.usuarios.GETusuariosTest" time="0.463">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://serverest.dev/usuarios
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
HTTP/1.1 200 OK
access-control-allow-origin: *
x-dns-prefetch-control: off
x-frame-options: SAMEORIGIN
strict-transport-security: max-age=15552000; includeSubDomains
x-download-options: noopen
x-content-type-options: nosniff
x-xss-protection: 1; mode=block
x-moesif-transaction-id: 9f097461-2e59-419b-a440-a0a4e4b2887a
content-type: application/json; charset=utf-8
X-Cloud-Trace-Context: 5493d22de3a623978c61edc4d6ad9d17
Date: Fri, 28 Jul 2023 16:56:42 GMT
Server: Google Frontend
Content-Length: 9209

{
    "quantidade": 41,
    "usuarios": [
        {
            "email": "jerold.effertz@hotmail.com",
            "password": "sycxzyao3k",
            "administrador": "true",
            "nome": "Ilana Douglas",
            "_id": "2z6jLeYsi68DTuhw"
        },
        {
            "email": "jeramy.douglas@hotmail.com",
            "password": "6ntuf8x797qao97",
            "administrador": "false",
            "nome": "Cristina Hahn",
            "_id": "8ZptOae7lqfOsYBU"
        },
        {
            "email": "leigha.lindgren@yahoo.com",
            "password": "075r27emw6ijxdo",
            "administrador": "false",
            "nome": "Antwan Stiedemann",
            "_id": "8tFStASby3OEa2f7"
        },
        {
            "email": "jo.damore@yahoo.com",
            "password": "abcd1234656",
            "administrador": "false",
            "nome": "Missy Padberg IV",
            "_id": "Bss4A1c4Xb1xrjvI"
        },
        {
            "email": "demetrius.metz@hotmail.com",
            "password": "abcd1234656",
            "administrador": "false",
            "nome": "Estella Kiehn",
            "_id": "CbEWlxCMBnXOnhsD"
        },
        {
            "email": "cleo.raynor@hotmail.com",
            "password": "  1690560755031",
            "administrador": "true",
            "nome": "Lorelei Kuhlman I",
            "_id": "CuWijHql0bVCQpYR"
        },
        {
            "email": "huey.romaguera@hotmail.com",
            "password": "h705n9vxjx5n7xk",
            "administrador": "false",
            "nome": "Ms. Mckinley Cronin",
            "_id": "CyCJObCLM8XoW9ix"
        },
        {
            "email": "dale.zemlak@yahoo.com",
            "password": "1x70m3xp",
            "administrador": "true",
            "nome": "Renay Hyatt",
            "_id": "EB1yVxaAkcZXEk2w"
        },
        {
            "email": "rossana.reichert@gmail.com",
            "password": "ygx5st4wg",
            "administrador": "false",
            "nome": "Stacey Shields",
            "_id": "Gn07NV2jdgdHCp8Q"
        },
        {
            "email": "danny.quigley@hotmail.com",
            "password": "lanvgtsjsa3ytv6",
            "administrador": "true",
            "nome": "Frankie Feil",
            "_id": "H0yMDlvItSCJ4EqR"
        },
        {
            "email": "temika.klocko@hotmail.com",
            "password": "pz9avvjw4uugww8",
            "administrador": "false",
            "nome": "Dwain Legros Sr.",
            "_id": "MWx3rpB5TE9w5AiE"
        },
        {
            "email": "shayla.parker@hotmail.com",
            "password": "abcd1",
            "administrador": "false",
            "nome": "Andy Parker",
            "_id": "OMUB4ussD8tRPqVO"
        },
        {
            "email": "alejandro.dickens@yahoo.com",
            "password": "9sxmnfzhucdazjn",
            "administrador": "false",
            "nome": "Ignacio Wehner",
            "_id": "OrE3kMBDRE7bcn6V"
        },
        {
            "email": "delmer.dooley@hotmail.com",
            "password": "aadt576s6",
            "administrador": "true",
            "nome": "  1690560751869",
            "_id": "Owy8rIGbwcBEaSYU"
        },
        {
            "email": "delena.pollich@gmail.com",
            "password": "msjg3ae5c95r",
            "administrador": "false",
            "nome": "Earle Bartell",
            "_id": "PTipUW1gSazQNYBR"
        },
        {
            "email": "roseline.kunze@hotmail.com",
            "password": "rspym0w502",
            "administrador": "false",
            "nome": "Usha Williamson",
            "_id": "Pqbl2ZvEaXcQjoL5"
        },
        {
            "email": "wilhemina.toy@hotmail.com",
            "password": "0l9ef5ja",
            "administrador": "true",
            "nome": "  1690561081156",
            "_id": "PvUlpnrIcN72incl"
        },
        {
            "email": "cheri.bogisich@yahoo.com",
            "password": "cdrzz8qk",
            "administrador": "false",
            "nome": "Chery Upton DDS",
            "_id": "Q2gpZ3HLeW6AauSH"
        },
        {
            "email": "noelle.gibson@yahoo.com",
            "password": "dz8qqhoei7",
            "administrador": "false",
            "nome": "Mrs. Teodoro Franecki",
            "_id": "SzeMbhaIU7USghEV"
        },
        {
            "email": "laronda.rowe@gmail.com",
            "password": "tznm3fm892r",
            "administrador": "false",
            "nome": "Jeanice Hilll",
            "_id": "UpLFKWG23d7oZD4H"
        },
        {
            "email": "arielle.tromp@yahoo.com",
            "password": "ofg7l7rsjfyqvn",
            "administrador": "false",
            "nome": "Sirena Hauck",
            "_id": "VvNhfLhJChqOqKk8"
        },
        {
            "email": "hobert.bauch@hotmail.com",
            "password": "0gimx6rsb29",
            "administrador": "false",
            "nome": "Ms. Gene Doyle",
            "_id": "Wns3cssEzYw8jUhc"
        },
        {
            "email": "evangelina.powlowski@yahoo.com",
            "password": "ctmki2ke",
            "administrador": "false",
            "nome": "Val Hettinger DVM",
            "_id": "X4MuRhVnLxSinMBk"
        },
        {
            "email": "bernice.schiller@yahoo.com",
            "password": "u0ld36or4",
            "administrador": "false",
            "nome": "Val Daugherty",
            "_id": "Zks3SLf7SQRuHhkP"
        },
        {
            "email": "toby.hagenes@yahoo.com",
            "password": "pq0r640lzbwdr5",
            "administrador": "true",
            "nome": "Eugena Wisoky",
            "_id": "af5kLF0DW9WI43OB"
        },
        {
            "email": "alecia.windler@hotmail.com",
            "password": "etihxkd3",
            "administrador": "false",
            "nome": "Bobbie McCullough",
            "_id": "apv0FEPkkrMQaTjJ"
        },
        {
            "email": "maryann.pfannerstill@yahoo.com",
            "password": "wh384yeibfz2m0f",
            "administrador": "false",
            "nome": "Virgilio Leuschke",
            "_id": "b04pQn1DnRdly8MJ"
        },
        {
            "email": "echo.bailey@gmail.com",
            "password": "ur5rs3rxoxpf7j3",
            "administrador": "true",
            "nome": "Jim Sanford",
            "_id": "bBUelXkvFd2SDjRz"
        },
        {
            "email": "rubin.kuhic@hotmail.com",
            "password": "ebhdgusvg8l4",
            "administrador": "true",
            "nome": "Dr. Jonah Upton",
            "_id": "bN6apOU7gEoiwupl"
        },
        {
            "email": "elina.sipes@hotmail.com",
            "password": "ubsk78gs7tg",
            "administrador": "true",
            "nome": "Harrison Rice",
            "_id": "cD2SzVfLF4lgqxiA"
        },
        {
            "email": "maren.heller@gmail.com",
            "password": "z9ouwqf8i",
            "administrador": "true",
            "nome": "Hilde Batz",
            "_id": "caKCH5t8JFbpgpxc"
        },
        {
            "email": "darlene.koss@gmail.com",
            "password": "cy7h46yg",
            "administrador": "true",
            "nome": "Ian Goodwin DVM",
            "_id": "cdqbRI0YPy9HCaPx"
        },
        {
            "email": "dane.abbott@yahoo.com",
            "password": "1gdfn93234a",
            "administrador": "false",
            "nome": "Ollie Hilll IV",
            "_id": "fhIYbjQpYv3g64rq"
        },
        {
            "email": "stacey.effertz@yahoo.com",
            "password": "yywn32xl",
            "administrador": "true",
            "nome": "Jessie Predovic III",
            "_id": "jUyvRQ7piCwGn0El"
        },
        {
            "email": "deana.osinski@yahoo.com",
            "password": "  1690561084614",
            "administrador": "true",
            "nome": "Sandi Windler",
            "_id": "ldkRb9aYb6ZP5Nff"
        },
        {
            "email": "riley.rowe@hotmail.com",
            "password": "eme19nqql2qhnm0",
            "administrador": "false",
            "nome": "Wilbur Greenfelder",
            "_id": "leFfroEMKRQdiEy1"
        },
        {
            "email": "ceola.schamberger@gmail.com",
            "password": "abcd1",
            "administrador": "false",
            "nome": "Marvis Gorczany IV",
            "_id": "mfyFQn35zH4z7MPQ"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa3.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "ois7qWBlPcQzUtxo"
        },
        {
            "email": "gretchen.reichert@yahoo.com",
            "password": "rmc1wwcmkkmi",
            "administrador": "true",
            "nome": "Colin Upton",
            "_id": "rA2Z5rz7p2eqI8lE"
        },
        {
            "email": "bryce.nolan@gmail.com",
            "password": "q0v73go1sg1u7",
            "administrador": "false",
            "nome": "Bruno Durgan Sr.",
            "_id": "u1a118IpEJgvh4Wb"
        },
        {
            "email": "keeley.rutherford@yahoo.com",
            "password": "z3yp6nli",
            "administrador": "true",
            "nome": "Clyde Schroeder",
            "_id": "vI29X1Yaaja105On"
        }
    ]
}
]]></system-out>
  </testcase>
  <testcase name="listaUsuarioID" classname="serverest.test.usuarios.GETusuariosTest" time="0.486">
    <error message="Schema to use cannot be null" type="java.lang.IllegalArgumentException"><![CDATA[java.lang.IllegalArgumentException: Schema to use cannot be null
	at io.restassured.module.jsv.JsonSchemaValidator.validateSchemaIsNotNull(JsonSchemaValidator.java:270)
	at io.restassured.module.jsv.JsonSchemaValidator.access$300(JsonSchemaValidator.java:75)
	at io.restassured.module.jsv.JsonSchemaValidator$JsonSchemaValidatorFactory.create(JsonSchemaValidator.java:281)
	at io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema(JsonSchemaValidator.java:166)
	at io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)
	at serverest.test.usuarios.GETusuariosTest.listaUsuarioID(GETusuariosTest.java:50)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestMethod(InvocationInterceptor.java:118)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:55)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:223)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:175)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:139)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]></error>
    <system-out><![CDATA[Request method:	GET
Request URI:	https://serverest.dev/usuarios
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
HTTP/1.1 200 OK
access-control-allow-origin: *
x-dns-prefetch-control: off
x-frame-options: SAMEORIGIN
strict-transport-security: max-age=15552000; includeSubDomains
x-download-options: noopen
x-content-type-options: nosniff
x-xss-protection: 1; mode=block
x-moesif-transaction-id: 47385bb1-2182-41f2-97b4-3151381efde7
content-type: application/json; charset=utf-8
X-Cloud-Trace-Context: c67c8987a0fdc901bf4beff88f5dd2d1
Date: Fri, 28 Jul 2023 16:56:43 GMT
Server: Google Frontend
Content-Length: 9209

{
    "quantidade": 41,
    "usuarios": [
        {
            "email": "jerold.effertz@hotmail.com",
            "password": "sycxzyao3k",
            "administrador": "true",
            "nome": "Ilana Douglas",
            "_id": "2z6jLeYsi68DTuhw"
        },
        {
            "email": "jeramy.douglas@hotmail.com",
            "password": "6ntuf8x797qao97",
            "administrador": "false",
            "nome": "Cristina Hahn",
            "_id": "8ZptOae7lqfOsYBU"
        },
        {
            "email": "leigha.lindgren@yahoo.com",
            "password": "075r27emw6ijxdo",
            "administrador": "false",
            "nome": "Antwan Stiedemann",
            "_id": "8tFStASby3OEa2f7"
        },
        {
            "email": "jo.damore@yahoo.com",
            "password": "abcd1234656",
            "administrador": "false",
            "nome": "Missy Padberg IV",
            "_id": "Bss4A1c4Xb1xrjvI"
        },
        {
            "email": "demetrius.metz@hotmail.com",
            "password": "abcd1234656",
            "administrador": "false",
            "nome": "Estella Kiehn",
            "_id": "CbEWlxCMBnXOnhsD"
        },
        {
            "email": "cleo.raynor@hotmail.com",
            "password": "  1690560755031",
            "administrador": "true",
            "nome": "Lorelei Kuhlman I",
            "_id": "CuWijHql0bVCQpYR"
        },
        {
            "email": "huey.romaguera@hotmail.com",
            "password": "h705n9vxjx5n7xk",
            "administrador": "false",
            "nome": "Ms. Mckinley Cronin",
            "_id": "CyCJObCLM8XoW9ix"
        },
        {
            "email": "dale.zemlak@yahoo.com",
            "password": "1x70m3xp",
            "administrador": "true",
            "nome": "Renay Hyatt",
            "_id": "EB1yVxaAkcZXEk2w"
        },
        {
            "email": "rossana.reichert@gmail.com",
            "password": "ygx5st4wg",
            "administrador": "false",
            "nome": "Stacey Shields",
            "_id": "Gn07NV2jdgdHCp8Q"
        },
        {
            "email": "danny.quigley@hotmail.com",
            "password": "lanvgtsjsa3ytv6",
            "administrador": "true",
            "nome": "Frankie Feil",
            "_id": "H0yMDlvItSCJ4EqR"
        },
        {
            "email": "temika.klocko@hotmail.com",
            "password": "pz9avvjw4uugww8",
            "administrador": "false",
            "nome": "Dwain Legros Sr.",
            "_id": "MWx3rpB5TE9w5AiE"
        },
        {
            "email": "shayla.parker@hotmail.com",
            "password": "abcd1",
            "administrador": "false",
            "nome": "Andy Parker",
            "_id": "OMUB4ussD8tRPqVO"
        },
        {
            "email": "alejandro.dickens@yahoo.com",
            "password": "9sxmnfzhucdazjn",
            "administrador": "false",
            "nome": "Ignacio Wehner",
            "_id": "OrE3kMBDRE7bcn6V"
        },
        {
            "email": "delmer.dooley@hotmail.com",
            "password": "aadt576s6",
            "administrador": "true",
            "nome": "  1690560751869",
            "_id": "Owy8rIGbwcBEaSYU"
        },
        {
            "email": "delena.pollich@gmail.com",
            "password": "msjg3ae5c95r",
            "administrador": "false",
            "nome": "Earle Bartell",
            "_id": "PTipUW1gSazQNYBR"
        },
        {
            "email": "roseline.kunze@hotmail.com",
            "password": "rspym0w502",
            "administrador": "false",
            "nome": "Usha Williamson",
            "_id": "Pqbl2ZvEaXcQjoL5"
        },
        {
            "email": "wilhemina.toy@hotmail.com",
            "password": "0l9ef5ja",
            "administrador": "true",
            "nome": "  1690561081156",
            "_id": "PvUlpnrIcN72incl"
        },
        {
            "email": "cheri.bogisich@yahoo.com",
            "password": "cdrzz8qk",
            "administrador": "false",
            "nome": "Chery Upton DDS",
            "_id": "Q2gpZ3HLeW6AauSH"
        },
        {
            "email": "noelle.gibson@yahoo.com",
            "password": "dz8qqhoei7",
            "administrador": "false",
            "nome": "Mrs. Teodoro Franecki",
            "_id": "SzeMbhaIU7USghEV"
        },
        {
            "email": "laronda.rowe@gmail.com",
            "password": "tznm3fm892r",
            "administrador": "false",
            "nome": "Jeanice Hilll",
            "_id": "UpLFKWG23d7oZD4H"
        },
        {
            "email": "arielle.tromp@yahoo.com",
            "password": "ofg7l7rsjfyqvn",
            "administrador": "false",
            "nome": "Sirena Hauck",
            "_id": "VvNhfLhJChqOqKk8"
        },
        {
            "email": "hobert.bauch@hotmail.com",
            "password": "0gimx6rsb29",
            "administrador": "false",
            "nome": "Ms. Gene Doyle",
            "_id": "Wns3cssEzYw8jUhc"
        },
        {
            "email": "evangelina.powlowski@yahoo.com",
            "password": "ctmki2ke",
            "administrador": "false",
            "nome": "Val Hettinger DVM",
            "_id": "X4MuRhVnLxSinMBk"
        },
        {
            "email": "bernice.schiller@yahoo.com",
            "password": "u0ld36or4",
            "administrador": "false",
            "nome": "Val Daugherty",
            "_id": "Zks3SLf7SQRuHhkP"
        },
        {
            "email": "toby.hagenes@yahoo.com",
            "password": "pq0r640lzbwdr5",
            "administrador": "true",
            "nome": "Eugena Wisoky",
            "_id": "af5kLF0DW9WI43OB"
        },
        {
            "email": "alecia.windler@hotmail.com",
            "password": "etihxkd3",
            "administrador": "false",
            "nome": "Bobbie McCullough",
            "_id": "apv0FEPkkrMQaTjJ"
        },
        {
            "email": "maryann.pfannerstill@yahoo.com",
            "password": "wh384yeibfz2m0f",
            "administrador": "false",
            "nome": "Virgilio Leuschke",
            "_id": "b04pQn1DnRdly8MJ"
        },
        {
            "email": "echo.bailey@gmail.com",
            "password": "ur5rs3rxoxpf7j3",
            "administrador": "true",
            "nome": "Jim Sanford",
            "_id": "bBUelXkvFd2SDjRz"
        },
        {
            "email": "rubin.kuhic@hotmail.com",
            "password": "ebhdgusvg8l4",
            "administrador": "true",
            "nome": "Dr. Jonah Upton",
            "_id": "bN6apOU7gEoiwupl"
        },
        {
            "email": "elina.sipes@hotmail.com",
            "password": "ubsk78gs7tg",
            "administrador": "true",
            "nome": "Harrison Rice",
            "_id": "cD2SzVfLF4lgqxiA"
        },
        {
            "email": "maren.heller@gmail.com",
            "password": "z9ouwqf8i",
            "administrador": "true",
            "nome": "Hilde Batz",
            "_id": "caKCH5t8JFbpgpxc"
        },
        {
            "email": "darlene.koss@gmail.com",
            "password": "cy7h46yg",
            "administrador": "true",
            "nome": "Ian Goodwin DVM",
            "_id": "cdqbRI0YPy9HCaPx"
        },
        {
            "email": "dane.abbott@yahoo.com",
            "password": "1gdfn93234a",
            "administrador": "false",
            "nome": "Ollie Hilll IV",
            "_id": "fhIYbjQpYv3g64rq"
        },
        {
            "email": "stacey.effertz@yahoo.com",
            "password": "yywn32xl",
            "administrador": "true",
            "nome": "Jessie Predovic III",
            "_id": "jUyvRQ7piCwGn0El"
        },
        {
            "email": "deana.osinski@yahoo.com",
            "password": "  1690561084614",
            "administrador": "true",
            "nome": "Sandi Windler",
            "_id": "ldkRb9aYb6ZP5Nff"
        },
        {
            "email": "riley.rowe@hotmail.com",
            "password": "eme19nqql2qhnm0",
            "administrador": "false",
            "nome": "Wilbur Greenfelder",
            "_id": "leFfroEMKRQdiEy1"
        },
        {
            "email": "ceola.schamberger@gmail.com",
            "password": "abcd1",
            "administrador": "false",
            "nome": "Marvis Gorczany IV",
            "_id": "mfyFQn35zH4z7MPQ"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa3.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "ois7qWBlPcQzUtxo"
        },
        {
            "email": "gretchen.reichert@yahoo.com",
            "password": "rmc1wwcmkkmi",
            "administrador": "true",
            "nome": "Colin Upton",
            "_id": "rA2Z5rz7p2eqI8lE"
        },
        {
            "email": "bryce.nolan@gmail.com",
            "password": "q0v73go1sg1u7",
            "administrador": "false",
            "nome": "Bruno Durgan Sr.",
            "_id": "u1a118IpEJgvh4Wb"
        },
        {
            "email": "keeley.rutherford@yahoo.com",
            "password": "z3yp6nli",
            "administrador": "true",
            "nome": "Clyde Schroeder",
            "_id": "vI29X1Yaaja105On"
        }
    ]
}
]]></system-out>
  </testcase>
</testsuite>